TranslationUnit(
  [ FunDef(
      [Int()]
    , Declarator(
        NoPointer()
      , FunDeclTyped(
          IdDecl("increment")
        , ParamList(
            [ParamDecl1([Int()], Declarator(NoPointer(), IdDecl("x")))]
          )
        )
      )
    , []
    , Compound(
        [Return(Add(Var(NamespaceID(None(), "x")), DecInt("1")))]
      )
    )
  , FunDef(
      [Int()]
    , Declarator(NoPointer(), FunDeclTyped(IdDecl("main"), ParamList([])))
    , []
    , Compound(
        [ Decl(
            [Int()]
          , [InitDecl(Declarator(NoPointer(), IdDecl("x")), DecInt("2"))]
          )
        , For(
            ForInitDecl(
              [Int()]
            , [InitDecl(Declarator(NoPointer(), IdDecl("y")), DecInt("0"))]
            )
          , Order(
              Add(
                Var(NamespaceID(None(), "x"))
              , MulDiv(DecInt("1"), Mul(), DecInt("5"))
              )
            , Lt()
            , DecInt("5")
            )
          , Assign(Var(NamespaceID(None(), "y")), AssignAdd(), DecInt("1"))
          , Exp(Var(NamespaceID(None(), "y")))
          )
        ]
      )
    )
  ]
)