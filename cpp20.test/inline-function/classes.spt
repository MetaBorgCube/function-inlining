module inline-function/classes

language cpp20

test simple method call no arguments [[
class MyClass {
	public:
		int foo() {
    		return 1;
		}
};

int main() {
    MyClass bar;
    [[bar.foo()]];
}
]] run inline-function-test(|#1) to [[
class MyClass {
  public :
    int foo( )
    {
      return 1;
    }
} ;

int main( )
{
  MyClass bar;
  1;
}
]]

test simple method call with arguments [[
class MyClass {
	public:
		int add(int x, int y) {
    		return x + y;
		}
};

int main() {
    MyClass bar;
    [[bar.add(2, 3)]];
}
]] run inline-function-test(|#1) to [[
class MyClass {
	public:
		int add(int x, int y) {
    		return x + y;
		}
};

int main() {
    MyClass bar;
    int x = 2;
    int y = 3;
    x + y;
}
]]

// It seems like virtual methods are not implemented in the Statix analysis.
//test dynamic dispatch [[
//class Animal {
//public:
//  virtual void sound() = 0;
//};
//
//class Dog : public Animal {
//  void sound() override { 1; }
//};
//
//class Cat : public Animal {
//  void sound() override { 2; }
//};
//
//int main() {
//  Animal* p;
//  [[p->sound()]];
//}
//]] run inline-function-test(|#1) fails

