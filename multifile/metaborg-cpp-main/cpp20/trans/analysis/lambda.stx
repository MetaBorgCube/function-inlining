module analysis/lambda

imports
  signatures/c-syntax-sig
  analysis/declarations

rules
  captureOk : scope * LambdaCapture
  capturesOk maps captureOk(*, list(*))

  captureOk(s, _).
  captureOk(s, Capture(id)) :-
    typeOfVar(s, id) == _.
  captureOk(s, CaptureReference(id)) :-
    typeOfVar(s, id) == _.
  captureOk(s, CaptureThis()).  // TODO: somehow check this is inside a class
  captureOk(s, CaptureThisCopy()).

  lambdaParamsOk : scope * LambdaParams -> (list(ID) * list(TYPE))

  lambdaParamsOk(s, LambdaParams(ParamList(param))) = paramsOk(s, param).

  lambdaReturnOk : scope * LambdaReturn -> TYPE

  lambdaReturnOk(s, LambdaReturn(T, p)) = retT :- {retTu}
    declSpecsToType(s, T) == retTu,
    typeOfPointer(p, retTu) == retT.